{"version":3,"sources":["webpack:///./src/components/Posts/PostListing.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.svg","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["PostListing","render","post","this","props","react_default","a","createElement","gatsby_browser_entry","to","fields","slug","frontmatter","title","date","excerpt","Component","__webpack_require__","d","__webpack_exports__","query","IndexPage","_ref","data","location","layout","allMarkdownRemark","edges","map","_ref2","node","PostListing_PostListing","key","id","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","HeaderWrapper","styled","div","withConfig","displayName","componentId","isHome","HeaderContainer","MainNav","nav","Header","componentDidMount","wrapper","animate","height","duration","fill","easing","iterations","_this","_this$props","ref","ReactDom","findDOMNode","src","logo","alt","gatsby_image_default","style","position","left","top","width","opacity","sizes","background","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header_Header","margin","maxWidth","padding","paddingTop","_2109691497"],"mappings":"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","file":"component---src-pages-index-js-584dc779e89c4470f600.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'gatsby';\r\nimport matter from 'gray-matter';\r\n\r\nexport default class PostListing extends Component {\r\n    render() {\r\n        const {post} = this.props;\r\n        return (\r\n        <article>\r\n            <h3><Link to={post.fields.slug}>{post.frontmatter.title}</Link></h3>\r\n            <span>{post.frontmatter.date}</span>\r\n            <p>{post.excerpt}</p>\r\n        </article>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Layout from '../components/layout';\r\nimport PostListing from '../components/Posts/PostListing.js';\r\n\r\n\r\n\r\nconst IndexPage = ({data, location}) => (\r\n  <Layout location={location}>\r\n    <h2>Posts</h2>\r\n    {data.allMarkdownRemark.edges.map(({node}) => {\r\n      return <PostListing key={node.id} post={node}/>\r\n    })}\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n\r\nexport const query = graphql`\r\nquery SiteMeta {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n    edges {\r\n      node {\r\n          id\r\n        frontmatter {\r\n          title\r\n          date(formatString:\"MMMM DD YYYY\")\r\n        }\r\n        fields{\r\n          slug\r\n        }\r\n        html\r\n        excerpt(pruneLength: 280)\r\n        # gatsby plugin remark for more info (pruneLength:280)\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-7665f742d9402c726ad0cd313e098ef8.svg\";","import React, { Component } from 'react'\r\nimport ReactDom from 'react-dom';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Img from \"gatsby-image\";\r\n\r\n\r\nimport logo from '../images/logo.svg';\r\n\r\n\r\n\r\n// Styled Components\r\nconst HeaderWrapper = styled.div`\r\n  background: #524763;\r\n  margin-bottom: 1.45rem;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: ${({isHome}) => (isHome?\"70vh\":\"20vh\")};\r\n  h1{\r\n    margin: 0;\r\n    img{\r\n      height: 80px;\r\n    }\r\n  }\r\n`\r\nconst HeaderContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 960px;\r\n  padding: 1.45rem 1.0875rem;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  z-index: 2;\r\n  Link{\r\n    color: white;\r\n    text-decoration: none;\r\n  }\r\n`\r\nconst MainNav = styled.nav`\r\n  ul {\r\n    list-style: none;\r\n    display: flex;\r\n    li{\r\n      margin-left: 10px;\r\n      a {\r\n        text-decoration: none;\r\n        color: #fff;\r\n        &:hover {\r\n          border-bottom: 3px solid #524763;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport default class Header extends Component {\r\n\r\n  componentDidMount(){\r\n    if (this.props.location.pathname === '/') {\r\n      this.wrapper.animate([{ height: \"20vh\" },{ height: \"60vh\" }], {\r\n          duration: 300,\r\n          fill: \"forwards\",\r\n          easing: \"cubic-bezier(0.86, 0, 0.07, 1)\",\r\n          iterations: 1\r\n        })\r\n\r\n    } else {\r\n      this.wrapper.animate([{height: \"60vh\"}, {height: \"20vh\"}], {\r\n        duration: 300,\r\n        fill: \"forwards\",\r\n        easing: \"cubic-bezier(0.86, 0, 0.07, 1)\",\r\n        iterations: 1\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const {data, location} = this.props;\r\n    return (\r\n      <HeaderWrapper\r\n      isHome={location.pathname === '/'}\r\n      ref={(wrapper) => this.wrapper = ReactDom.findDOMNode(wrapper)}\r\n      >\r\n        <HeaderContainer>\r\n          <h1>\r\n            <Link to=\"/\" >\r\n              {/* {siteTitle} */}\r\n              <img src={logo} alt=\"logo\" />\r\n            </Link>\r\n          </h1>\r\n          <MainNav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/about\">About</Link>\r\n              </li>\r\n            </ul>\r\n          </MainNav>\r\n        </HeaderContainer>\r\n        <Img style={{\r\n          position: 'absolute',\r\n          left: '0',\r\n          top: '0',\r\n          width: '100%',\r\n          height: '100%',\r\n          opacity: \"0.6\"\r\n        }}\r\n          sizes={data.background.sizes} />\r\n\r\n      </HeaderWrapper>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children, location }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n        background: imageSharp(fluid: { originalName: {regex: \"/bg.jpeg/\"}}) {\r\n          sizes(maxWidth: 1240) {\r\n            ...GatsbyImageSharpSizes\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            { name: 'description', content: 'Sample' },\r\n            { name: 'keywords', content: 'sample, something' },\r\n          ]}\r\n        >\r\n          <html lang=\"en\" />\r\n        </Helmet>\r\n        <Header data={data} location={location}/>\r\n        <div\r\n          style={{\r\n            margin: '0 auto',\r\n            maxWidth: 960,\r\n            padding: '0px 1.0875rem 1.45rem',\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}